{"trial_id": "0001", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "dense_1_units", "default": null, "conditions": [], "min_value": 16, "max_value": 72, "step": 4, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_2_units", "default": null, "conditions": [], "min_value": 16, "max_value": 72, "step": 4, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_3_units", "default": null, "conditions": [], "min_value": 16, "max_value": 72, "step": 4, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_4_units", "default": null, "conditions": [], "min_value": 16, "max_value": 72, "step": 4, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_5_units", "default": null, "conditions": [], "min_value": 16, "max_value": 72, "step": 4, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_6_units", "default": null, "conditions": [], "min_value": 16, "max_value": 72, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.01, "conditions": [], "values": [0.01, 0.001, 0.0001], "ordered": true}}], "values": {"dense_1_units": 64, "dense_2_units": 52, "dense_3_units": 40, "dense_4_units": 28, "dense_5_units": 64, "dense_6_units": 36, "learning_rate": 0.0001, "tuner/epochs": 3, "tuner/initial_epoch": 0, "tuner/bracket": 2, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"d:\\Anaconda\\envs\\my-course\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"d:\\Anaconda\\envs\\my-course\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"d:\\Anaconda\\envs\\my-course\\Lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"d:\\Anaconda\\envs\\my-course\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"d:\\Anaconda\\envs\\my-course\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"d:\\Anaconda\\envs\\my-course\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"d:\\Anaconda\\envs\\my-course\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"d:\\Anaconda\\envs\\my-course\\Lib\\site-packages\\keras\\src\\losses\\losses.py\", line 1433, in mean_squared_logarithmic_error\n    return ops.mean(ops.square(first_log - second_log), axis=-1)\n                               ~~~~~~~~~~^~~~~~~~~~~~\nValueError: Dimensions must be equal, but are 140 and 93752 for '{{node compile_loss/msle/sub}} = Sub[T=DT_FLOAT](compile_loss/msle/Log, compile_loss/msle/Log_1)' with input shapes: [?,140], [?,93752].\n"}